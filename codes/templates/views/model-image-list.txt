@extends('admin.layout')

@section('styles')
    <link rel="stylesheet" href="{{ asset(env('PUBLIC_PATH', '') . 'css/laravel-pagination.css') }}">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
    <meta name="csrf-token" content="{{ csrf_token() }}">
@endsection

@section('main')
    <div class="container">
        <h2 class="text-center align-middle mt-4"><b>{model_name} Fotoğrafları</b></h2>
        <br>
        <!-- Input field for uploading more images -->
        <form id="images-form" action="{{ route('{model_name_slug}.images.store', ['{model_name_slug}_id' => ${model_name_slug}->id]) }}" method="POST" enctype="multipart/form-data">
            @csrf
            <div class="row">
                <div class="col-md-10">
                    <div class="form-group">
                        <label for="images">Yeni Fotoğraf Ekle</label>
                        <input type="file" name="images[]" id="images" class="form-control" multiple>
                    </div>
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-primary mt-4" onclick="submitForm()" style="width: 100%;">Ekle</button>
                </div>
            </div>
        </form>
        <br>
        <label for="" id="loading-bar-lbl" style="display: none;">
            <p>Fotoğraflar yükleniyor, işlem bitene kadar lütfen sayfayı kapatmayınız...</p>
        </label>
        <div class="progress" role="progressbar" id="loading-bar" aria-label="" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="display: none;">
            <div class="progress-bar" style="width: 0%">0%</div>
        </div>
        <br>
        <div class="row sortable-list">
            @php
                $sortedImages = ${model_name_slug}->images->sortBy('sort_order');
            @endphp
            @foreach($sortedImages as $image)
                <div class="col-md-4 mb-4">
                    <div class="card" style="max-width: 100%; height: 400px;">
                        <div style="max-width: 100%; height: 336px; display: flex; justify-content: center; align-items: center;">
                            <img src="{{ asset(env('PUBLIC_PATH', '') . 'images/{model_name_slug}/' . $image->image_path) }}" class="card-img-top" alt="Image" style="max-width: 100%; max-height: 100%;">
                        </div>
                        
                        <div class="card-body">
                            <button class="btn btn-danger btn-sm btn-block" onclick="deleteImage('{{ $image->id }}')">Sil</button>
                        </div>
                    </div>
                    <input type="hidden" class="image-id" value="{{ $image->id }}">
                </div>        
            @endforeach
        </div>
    </div>
@endsection

@section('scripts')
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        // Initialize SortableJS for the sortable-list container
        var sortable = new Sortable(document.querySelector('.sortable-list'), {
            animation: 150, // Animation duration in milliseconds
            handle: '.card', // Specify the handle for dragging
            onEnd: function (evt) {
                // Get the ID of the dragged item and its new and previous positions
                var itemId = evt.item.querySelector('.image-id').value;
                var newIndex = evt.newIndex + 1; // Increment by 1 to match 1-based index
                var oldIndex = evt.oldIndex + 1; // Increment by 1 to match 1-based index

                // Send AJAX request to update the sort order
                axios.post('{{ route("{model_name_slug}.images.move", ['{model_name_slug}_id' => ${model_name_slug}->id]) }}', {
                    id: itemId,
                    currentSortOrder: oldIndex,
                    newSortOrder: newIndex
                }).then(function (response) {
                    // Handle success response
                    console.log(response.data);

                    // Update the sort order numbers displayed in the UI (if needed)
                    // This can be done based on the response from the server
                }).catch(function (error) {
                    // Handle error response
                    console.error(error);
                });
            }
        });

        function deleteImage(id) {
            Swal.fire({
                title: 'Bu Fotoğrafı Silmek İstediğine Emin Misin?',
                text: "Bu işlem geri alınamaz!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'Hayır, iptal et!'
            }).then((result) => {
                if (result.isConfirmed) {
                    axios.post(`/admin/{model_title_lower}/{{ ${model_name_slug}->id }}/images/delete/${id}`, {
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest',
                                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                            },
                            withCredentials: true,
                            _method: 'delete'
                        })
                        .then(response => {
                            if (response.data.success) {
                                window.location.reload(); // Reload the page after deletion
                            } else {
                                Swal.fire(
                                    'Hata!',
                                    'Fotoğraf Silinemedi.',
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            console.error(error);
                            Swal.fire(
                                'Hata!',
                                'Beklenmeyen bir hata oluştu.',
                                'error'
                            );
                        });
                }
            });
        }

        function submitForm()
        {
            if (document.getElementById('images').files.length === 0) {
                // If no files are selected, show a SweetAlert message
                Swal.fire({
                    icon: 'error',
                    title: 'Lütfen en az 1 fotoğraf seçin!',
                    confirmButtonText: 'Tamam',
                });
                return;
            }
            Swal.fire({
                title: "Fotoğraflar yükleniyor. Bu işlem biraz zaman alabilir, lütfen sayfayı kapatmayın.",
                icon: "info",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
            document.getElementById('images-form').submit();
        }
    </script>
@endsection